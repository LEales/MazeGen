package model.Maps;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class World4MapsTest {
    World4Maps w;

    @BeforeEach
    void init() {
        w = new World4Maps();
    }

    @Test
    void level41pos() {
        int[][] level = {{7, 0, 0, 1, 1, 1, 1, 4, 1, 1, 1, 0, 0, 2},
                {1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1},
                {4, 0, 1, 0, 0, 4, 0, 1, 0, 1, 1, 1, 0, 1},
                {1, 0, 1, 1, 1, 1, 0, 4, 0, 4, 0, 1, 1, 1},
                {4, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0},
                {1, 1, 1, 0, 1, 1, 1, 4, 0, 1, 1, 1, 1, 1},
                {0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 4, 0},
                {1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1},
                {4, 0, 0, 0, 4, 1, 1, 1, 0, 0, 0, 0, 0, 1},
                {1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1},
                {0, 0, 1, 0, 1, 1, 1, 4, 1, 1, 1, 4, 0, 1},
                {0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1},
                {4, 1, 0, 0, 0, 0, 0, 1, 1, 4, 1, 0, 0, 1},
                {0, 0, 4, 1, 4, 1, 4, 1, 0, 0, 1, 1, 1, 3}};
        int[][] level1Get = w.getLevel41();
        boolean equal = true;
        for (int i = 0; i < level.length; i++) {
            for (int j = 0; j < level[i].length; j++) {
                if (level1Get[i][j] != level[i][j]) {
                    equal = false;
                    break;
                }
            }
        }
        assertTrue(equal);
    }

    @Test
    void level41neg() {
        int[][] level = {{7, 0, 9, 1, 1, 1, 1, 4, 1, 1, 1, 0, 0, 2},
                {1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1},
                {4, 0, 1, 0, 0, 4, 0, 1, 0, 1, 1, 1, 0, 1},
                {1, 0, 1, 1, 1, 1, 0, 4, 0, 4, 0, 1, 1, 1},
                {4, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0},
                {1, 1, 1, 0, 1, 1, 1, 4, 0, 1, 1, 1, 1, 1},
                {0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 4, 0},
                {1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1},
                {4, 0, 0, 0, 4, 1, 1, 1, 0, 0, 0, 0, 0, 1},
                {1, 1, 1, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1},
                {0, 0, 1, 0, 1, 1, 1, 4, 1, 1, 1, 4, 0, 1},
                {0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1},
                {4, 1, 0, 0, 0, 0, 0, 1, 1, 4, 1, 0, 0, 1},
                {0, 0, 4, 1, 4, 1, 4, 1, 0, 0, 1, 1, 1, 3}};
        int[][] level1Get = w.getLevel41();
        boolean equal = true;
        for (int i = 0; i < level.length; i++) {
            for (int j = 0; j < level[i].length; j++) {
                if (level1Get[i][j] != level[i][j]) {
                    equal = false;
                    break;
                }
            }
        }
        assertFalse(equal);
    }

    @Test
    void level42pos() {
        int[][] level = {{4, 1, 0, 0, 7, 0, 4, 0, 0, 0, 1, 1, 1, 1},
                {0, 4, 1, 1, 4, 0, 1, 4, 1, 4, 1, 0, 0, 1},
                {0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 4},
                {1, 1, 1, 1, 1, 1, 0, 4, 0, 4, 1, 1, 1, 0},
                {4, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 4},
                {0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1},
                {4, 1, 1, 1, 1, 4, 0, 4, 1, 1, 0, 4, 1, 1},
                {1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0},
                {1, 1, 4, 0, 4, 0, 1, 1, 4, 1, 0, 0, 1, 1},
                {0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 4},
                {4, 1, 1, 0, 0, 1, 0, 4, 0, 0, 1, 0, 0, 1},
                {1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 4, 0, 1},
                {1, 1, 4, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 4},
                {3, 0, 1, 1, 4, 1, 1, 4, 0, 1, 1, 1, 4, 2}};
        int[][] level1Get = w.getLevel42();
        boolean equal = true;
        for (int i = 0; i < level.length; i++) {
            for (int j = 0; j < level[i].length; j++) {
                if (level1Get[i][j] != level[i][j]) {
                    equal = false;
                    break;
                }
            }
        }
        assertTrue(equal);
    }

    @Test
    void level42neg() {
        int[][] level = {{4, 1, 7, 0, 7, 0, 4, 0, 0, 0, 1, 1, 1, 1},
                {0, 4, 1, 1, 4, 0, 1, 4, 1, 4, 1, 0, 0, 1},
                {0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 4},
                {1, 1, 1, 1, 1, 1, 0, 4, 0, 4, 1, 1, 1, 0},
                {4, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 4},
                {0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1},
                {4, 1, 1, 1, 1, 4, 0, 4, 1, 1, 0, 4, 1, 1},
                {1, 0, 0, 0, 1, 99, 0, 0, 0, 0, 0, 0, 1, 0},
                {1, 1, 4, 0, 4, 0, 1, 1, 4, 1, 0, 0, 1, 1},
                {0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 4},
                {4, 1, 1, 0, 0, 1, 0, 4, 0, 0, 1, 0, 0, 1},
                {1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 4, 0, 1},
                {1, 1, 4, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 4},
                {3, 0, 1, 1, 4, 1, 1, 4, 0, 1, 1, 1, 4, 2}};
        int[][] level1Get = w.getLevel42();
        boolean equal = true;
        for (int i = 0; i < level.length; i++) {
            for (int j = 0; j < level[i].length; j++) {
                if (level1Get[i][j] != level[i][j]) {
                    equal = false;
                    break;
                }
            }
        }
        assertFalse(equal);
    }

    @Test
    void level43pos() {
        int[][] level = {{3, 1, 1, 4, 0, 6, 4, 1, 1, 0, 1, 0, 0, 4},
                {0, 0, 0, 1, 1, 4, 0, 0, 1, 4, 1, 0, 4, 1},
                {0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0},
                {0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0},
                {0, 1, 1, 5, 0, 4, 0, 1, 0, 0, 1, 1, 1, 0},
                {0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 4, 1},
                {7, 1, 0, 0, 1, 4, 0, 4, 0, 0, 1, 0, 0, 1},
                {1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 4},
                {1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1},
                {1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 4},
                {1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 4, 0, 1},
                {1, 0, 0, 0, 0, 0, 0, 4, 0, 1, 0, 0, 1, 4},
                {1, 0, 0, 0, 4, 1, 1, 1, 0, 1, 0, 4, 1, 0},
                {2, 1, 4, 1, 1, 0, 0, 1, 1, 4, 1, 1, 0, 0}};
        int[][] level1Get = w.getLevel43();
        boolean equal = true;
        for (int i = 0; i < level.length; i++) {
            for (int j = 0; j < level[i].length; j++) {
                if (level1Get[i][j] != level[i][j]) {
                    equal = false;
                    break;
                }
            }
        }
        assertTrue(equal);
    }

    @Test
    void level43neg() {
        int[][] level = {{3, 1, 1, 4, 0, 6, 4, 8, 1, 0, 1, 0, 0, 4},
                {0, 0, 0, 1, 1, 4, 0, 0, 1, 4, 1, 0, 4, 1},
                {0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0},
                {0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0},
                {0, 1, 1, 5, 0, 4, 0, 1, 0, 0, 1, 1, 1, 0},
                {0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 4, 1},
                {7, 1, 0, 0, 1, 4, 0, 4, 0, 0, 1, 0, 0, 1},
                {1, 2, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 4},
                {1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1},
                {1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 4},
                {1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 4, 0, 1},
                {1, 0, 0, 0, 0, 0, 0, 4, 0, 1, 0, 0, 1, 4},
                {1, 0, 0, 0, 4, 1, 1, 1, 0, 1, 0, 4, 1, 0},
                {2, 1, 4, 1, 1, 0, 0, 1, 1, 4, 1, 1, 0, 0}};
        int[][] level1Get = w.getLevel43();
        boolean equal = true;
        for (int i = 0; i < level.length; i++) {
            for (int j = 0; j < level[i].length; j++) {
                if (level1Get[i][j] != level[i][j]) {
                    equal = false;
                    break;
                }
            }
        }
        assertFalse(equal);
    }

    @Test
    void level44pos() {
        int[][] level = {{2, 1, 1, 4, 1, 1, 0, 1, 4, 1, 0, 4, 1, 1},
                {0, 0, 0, 0, 0, 1, 4, 1, 0, 1, 0, 1, 0, 1},
                {4, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 4},
                {1, 1, 1, 1, 4, 1, 1, 7, 0, 0, 6, 0, 0, 1},
                {1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1},
                {5, 0, 4, 1, 1, 1, 4, 6, 4, 1, 0, 1, 1, 4},
                {0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0},
                {1, 1, 0, 0, 4, 1, 4, 0, 1, 1, 0, 4, 1, 1},
                {1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1},
                {4, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 4},
                {0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 4, 0, 0},
                {4, 1, 0, 4, 0, 1, 1, 4, 0, 1, 4, 1, 1, 0},
                {1, 0, 0, 1, 0, 1, 0, 0, 4, 1, 0, 0, 4, 1},
                {1, 1, 1, 4, 0, 1, 4, 1, 1, 0, 0, 0, 0, 3}};
        int[][] level1Get = w.getLevel44();
        boolean equal = true;
        for (int i = 0; i < level.length; i++) {
            for (int j = 0; j < level[i].length; j++) {
                if (level1Get[i][j] != level[i][j]) {
                    equal = false;
                    break;
                }
            }
        }
        assertTrue(equal);
    }

    @Test
    void level44neg() {
        int[][] level = {{2, 1, 1, 4, 1, 1, 0, 1, 4, 1, 9, 4, 1, 1},
                {0, 0, 0, 0, 0, 1, 4, 1, 0, 1, 0, 1, 0, 1},
                {4, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 4},
                {1, 1, 1, 1, 4, 1, 1, 7, 0, 0, 6, 0, 0, 1},
                {1, 0, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1, 0, 1},
                {5, 0, 4, 1, 1, 1, 4, 6, 4, 1, 0, 1, 1, 4},
                {0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0},
                {1, 1, 0, 0, 4, 1, 4, 0, 1, 1, 0, 4, 1, 1},
                {1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1},
                {4, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 4},
                {0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 4, 0, 0},
                {4, 1, 0, 4, 0, 1, 1, 4, 0, 1, 4, 1, 1, 0},
                {1, 0, 0, 1, 0, 1, 0, 0, 4, 1, 0, 0, 4, 1},
                {1, 1, 1, 4, 0, 1, 4, 1, 1, 0, 0, 0, 0, 3}};
        int[][] level1Get = w.getLevel44();
        boolean equal = true;
        for (int i = 0; i < level.length; i++) {
            for (int j = 0; j < level[i].length; j++) {
                if (level1Get[i][j] != level[i][j]) {
                    equal = false;
                    break;
                }
            }
        }
        assertFalse(equal);
    }

    @Test
    void level45pos() {
        int[][] level = {{3, 1, 0, 4, 1, 1, 4, 1, 1, 4, 0, 4, 1, 4},
                {0, 4, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1},
                {0, 0, 4, 1, 0, 0, 1, 0, 0, 1, 4, 0, 0, 1},
                {4, 1, 0, 4, 1, 0, 1, 0, 1, 4, 0, 1, 1, 4},
                {0, 1, 0, 0, 4, 0, 4, 1, 4, 0, 0, 1, 0, 0},
                {0, 1, 4, 6, 1, 4, 1, 0, 0, 0, 0, 1, 0, 4},
                {1, 1, 0, 0, 0, 0, 0, 0, 4, 4, 0, 1, 4, 1},
                {1, 0, 0, 7, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0},
                {1, 4, 0, 0, 0, 0, 1, 0, 1, 1, 4, 0, 1, 0},
                {0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0},
                {0, 1, 0, 0, 0, 0, 4, 1, 1, 0, 1, 1, 0, 4},
                {4, 1, 1, 1, 4, 0, 1, 0, 0, 0, 1, 0, 0, 1},
                {1, 0, 0, 0, 1, 0, 1, 4, 0, 1, 1, 4, 1, 1},
                {5, 1, 1, 1, 4, 0, 0, 1, 1, 4, 0, 0, 0, 2}};
        int[][] level1Get = w.getLevel45();
        boolean equal = true;
        for (int i = 0; i < level.length; i++) {
            for (int j = 0; j < level[i].length; j++) {
                if (level1Get[i][j] != level[i][j]) {
                    equal = false;
                    break;
                }
            }
        }
        assertTrue(equal);
    }

    @Test
    void level45neg() {
        int[][] level = {{3, 1, 0, 4, 1, 1, 4, 1, 1, 4, 0, 4, 1, 4},
                {0, 4, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1},
                {0, 0, 4, 1, 0, 2, 1, 0, 0, 1, 4, 0, 0, 1},
                {4, 1, 0, 4, 1, 0, 1, 0, 1, 4, 0, 1, 1, 4},
                {0, 1, 0, 0, 4, 0, 4, 1, 4, 0, 0, 1, 0, 0},
                {0, 1, 4, 6, 1, 4, 1, 0, 0, 0, 0, 1, 0, 4},
                {1, 1, 0, 0, 0, 0, 0, 0, 4, 4, 0, 1, 4, 1},
                {1, 0, 0, 7, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0},
                {1, 4, 0, 0, 0, 0, 1, 0, 1, 1, 4, 0, 1, 0},
                {0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0},
                {0, 1, 0, 0, 0, 0, 4, 1, 1, 0, 1, 1, 0, 4},
                {4, 1, 1, 1, 4, 0, 1, 0, 0, 0, 1, 0, 99, 1},
                {1, 0, 0, 0, 1, 0, 1, 4, 0, 1, 1, 4, 1, 1},
                {5, 1, 1, 1, 4, 0, 0, 1, 1, 4, 0, 0, 0, 2}};
        int[][] level1Get = w.getLevel45();
        boolean equal = true;
        for (int i = 0; i < level.length; i++) {
            for (int j = 0; j < level[i].length; j++) {
                if (level1Get[i][j] != level[i][j]) {
                    equal = false;
                    break;
                }
            }
        }
        assertFalse(equal);
    }
}